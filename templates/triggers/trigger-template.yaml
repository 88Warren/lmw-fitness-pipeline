apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: trigger-template
  namespace: lmw-fitness
spec:
  params:
  - name: GITHUB_CLONE_URL
  - name: GITHUB_HELM_URL
  - name: IMAGE_REPO
  - name: APPLICATION_TYPE
  - name: DOCKERFILE
  - name: CONTEXT
  - name: BUILDER_IMAGE
  - name: TRIVY_SEVERITY
  - name: HELM_CHART_PATH
  - name: PIPELINE_SEQUENCE_ID
  resourcetemplates:
  - apiVersion: tekton.dev/v1
    kind: PipelineRun
    metadata:
      generateName: build-test-deploy-pipeline-run-
      namespace: lmw-fitness
    spec:
      pipelineRef:
        name: build-test-deploy-pipeline
      params:
      - name: GITHUB_CLONE_URL
        value: $(tt.params.GITHUB_CLONE_URL)
      - name: GITHUB_HELM_URL
        value: $(tt.params.GITHUB_HELM_URL)
      - name: IMAGE_REPO
        value: $(tt.params.IMAGE_REPO)
      - name: APPLICATION_TYPE
        value: $(tt.params.APPLICATION_TYPE)
      - name: DOCKERFILE
        value: $(tt.params.DOCKERFILE)
      - name: CONTEXT
        value: $(tt.params.CONTEXT)
      - name: BUILDER_IMAGE
        value: $(tt.params.BUILDER_IMAGE)
      - name: TRIVY_SEVERITY
        value: $(tt.params.TRIVY_SEVERITY)
      - name: HELM_CHART_PATH
        value: $(tt.params.HELM_CHART_PATH)
      - name: PIPELINE_SEQUENCE_ID
        value: $(tt.params.PIPELINE_SEQUENCE_ID)
      workspaces:
        - name: source
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
        - name: helm-chart
          volumeClaimTemplate:
            metadata:
              creationTimestamp: null
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
        - name: git-credentials
          secret:
            secretName: git-credentials
        - name: docker-config
          secret:
            secretName: docker-config