apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-test-deploy-pipeline
  namespace: lmw-fitness
spec:
  description: |
    This pipeline clones a git repo, builds an image with Kaniko and
    pushes it to a registry   
  params:
    - name: GITHUB_CLONE_URL
      type: string
      description: URL of the GitHub repository to clone
    # - name: SONAR_HOST_URL
    #   type: string
    #   description: URL of the SonarQube server
    # - name: PROJECT_KEY
    #   type: string
    #   description: Key of the project in SonarQube
    - name: GITHUB_HELM_URL
      type: string
      description: URL of the GitHub Helm chart repository to clone
    - name: IMAGE
      type: string
      description: Name of the image to build and push
    - name: DOCKERFILE
      type: string
      description: Path to the Dockerfile
    - name: CONTEXT
      type: string
      description: Path to the build context
    - name: BUILDER_IMAGE
      type: string
      description: Name of the Kaniko builder image
    - name: TRIVY_SEVERITY
      type: string
      description: Comma-separated list of severities to scan for (e.g. "CRITICAL,HIGH")
    - name: VALUES_MANIFEST_PATH
      type: string
      description: Path to the Helm values manifest file
    - name: SERVICE_TYPE
      type: string  
      description: Type of service to deploy (e.g. "web", "api", etc.)
    - name: HELM_FILE
      type: string
      description: Path to the Helm chart file
    - name: COMMIT_MESSAGE
      type: string
      description: Commit message for the Helm chart changes
  workspaces:
    - name: git-credentials
    - name: helm-chart
    - name: source
    - name: docker-config
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
        kind: Task
      params:
        - name: GITHUB_CLONE_URL
          value: $(params.GITHUB_CLONE_URL)
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: git-credentials
          workspace: git-credentials
        - name: source
          workspace: source

    - name: eslint-lint
      runAfter: ["git-clone"]
      taskRef:
        name: eslint-lint
        kind: Task
      workspaces:
        - name: source
          workspace: source
          
    - name: go-test
      runAfter: ["git-clone"]
      taskRef:
        name: go-test
        kind: Task
      workspaces:
        - name: source
          workspace: source

    - name: react-test
      runAfter: ["git-clone"]
      taskRef:
        name: react-test
        kind: Task
      workspaces:
        - name: source
          workspace: source

  # - name: sonarqube-scan
  #   runAfter: ["go-test"]
  #   taskRef:
  #     name: sonarqube-scan
  #     kind: Task
  #   workspaces:
  #     - name: source
  #       workspace: source
  #   params:
  #     - name: SONAR_HOST_URL
  #       value: $(params.SONAR_HOST_URL)
  #     - name: PROJECT_KEY
  #       value: $(params.PROJECT_KEY)

    - name: helm-chart-clone
      taskRef:
        name: helm-chart-clone
        kind: Task
      params:
        - name: GITHUB_HELM_URL
          value: $(params.GITHUB_HELM_URL)
      workspaces:
        - name: helm-chart
          workspace: helm-chart
        - name: git-credentials
          workspace: git-credentials

    - name: kaniko-docker-build
      # runAfter: ["go-test", "sonarqube-scan", "eslint-lint", "react-test"]
      runAfter: ["go-test", "eslint-lint", "react-test"]
      taskRef:
        name: kaniko-docker-build
        kind: Task
      workspaces:
      - name: source
        workspace: source
      - name: docker-config
        workspace: docker-config
      params:
      - name: IMAGE
        value: $(params.IMAGE)
      - name: DOCKERFILE
        value: $(params.DOCKERFILE)
      - name: CONTEXT
        value: $(params.CONTEXT)
      - name: BUILDER_IMAGE
        value: $(params.BUILDER_IMAGE)

    - name: trivy-scan
      runAfter: ["kaniko-docker-build"]
      taskRef:
        name: trivy-scan
        kind: Task
      params:
        - name: IMAGE
          value: $(tasks.kaniko-docker-build.results.IMAGE_URL)
        - name: TRIVY_SEVERITY
          value: $(params.TRIVY_SEVERITY)
          
    - name: update-image
      runAfter: ["trivy-scan"]
      taskRef:
        name: update-image
        kind: Task
      params:
        - name: VALUES_MANIFEST_PATH
          value: $(params.VALUES_MANIFEST_PATH)
        - name: SERVICE_TYPE
          value: $(params.SERVICE_TYPE)
        - name: IMAGE
          value: $(tasks.kaniko-docker-build.results.IMAGE_URL)
      workspaces:
        - name: helm-chart
          workspace: helm-chart
    
    - name: commit-helm-changes
      runAfter: ["update-image"]
      taskRef:
        name: commit-helm-changes
        kind: Task
      params:
        - name: HELM_FILE
          value: $(params.HELM_FILE)
        - name: COMMIT_MESSAGE
          value: $(params.COMMIT_MESSAGE)
        - name: GITHUB_HELM_URL
          value: $(params.GITHUB_HELM_URL)
      workspaces:
        - name: helm-chart
          workspace: helm-chart
        - name: git-credentials
          workspace: git-credentials